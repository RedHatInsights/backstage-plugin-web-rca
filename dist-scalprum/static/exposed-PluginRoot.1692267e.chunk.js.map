{"version":3,"file":"static/exposed-PluginRoot.1692267e.chunk.js","mappings":"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","sources":["webpack://plugin-web-rca/./src/components/WebRCAFetchComponent/WebRCAFetchComponent.tsx","webpack://plugin-web-rca/./src/routes.ts","webpack://plugin-web-rca/./src/plugin.ts"],"sourcesContent":["import React from 'react';\nimport {\n  Table,\n  TableColumn,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport useAsync from 'react-use/lib/useAsync';\nimport { useApi, configApiRef, identityApiRef } from '@backstage/core-plugin-api';\nimport '@backstage/plugin-user-settings';\nimport { Typography } from '@material-ui/core';\nimport { InfoCard } from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\n\ninterface DenseTableProps {\n  incidents?: IncidentList;\n  web_rca_url?: string;\n  message?: string;\n}\n\ninterface Incident {\n  id?: string;\n  kind?: string;\n  href?: string;\n  incident_id?: string;\n  summary?: string;\n  description?: string;\n}\n// jq '{kind, page, size, total, items: [.items[] | {id, kind, href, incident_id, summary, description}]}'\ninterface IncidentList {\n  kind: 'IncidentList';\n  page?: number;\n  size?: number;\n  total?: number;\n  items?: Incident[];\n  errorMsg?: string;\n}\n\ninterface product {\n  id: string;\n  kind: string;\n  href: string;\n  name: string;\n  fullname: string;\n}\n\ninterface productList {\n  items: product[];\n}\n\ninterface FetchProps {\n  product?: string;\n}\n\nexport const DenseTable = ({\n  incidents,\n  web_rca_url,\n  message,\n}: DenseTableProps) => {\n  if (message) {\n    return (\n      <InfoCard title=\"Web RCA Incidents\">\n        <Typography variant=\"body1\">{\"Error fetching incidents: \" + message }</Typography>\n      </InfoCard>\n    );\n  }\n\n  if (!incidents || !incidents.items || incidents.items.length === 0) {\n    return (\n      <InfoCard title=\"Web RCA Incidents\">\n        <Typography variant=\"body1\">\"Error fetching incidents: No Incidents\"</Typography>\n      </InfoCard>\n    );\n  }\n\n  if (!incidents || !incidents.items || incidents.items.length === 0) {\n    return (\n      <InfoCard title=\"Web RCA Incidents\">\n        <Typography variant=\"body1\">{\"Error fetching incidents: \" + message }</Typography>\n      </InfoCard>\n    );\n  }\n\n\n  const columns: TableColumn[] = [\n    { title: 'ID', field: 'incident_id' },\n    { title: 'Summary', field: 'summary' },\n    { title: 'Description', field: 'description' },\n  ];\n\n  const data = incidents.items.map(inc => {\n    return {\n      incident_id: (\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={`${web_rca_url}/incident/${inc.incident_id}/details`}\n        >\n          {inc.incident_id}\n        </a>\n      ),\n      summary: inc.summary,\n      description: inc.description,\n    };\n  });\n\n  return (\n    <Table\n      title=\"Web RCA Incidents\"\n      options={{ search: true, paging: true, pageSize: 10 }}\n      columns={columns}\n      data={data}\n    />\n  );\n};\n\nasync function refresh(url: string, client_id: string, client_secret: string) {\n  // @REF [URL Encoded form body](https://stackoverflow.com/questions/35325370/how-do-i-post-a-x-www-form-urlencoded-request-using-fetch/37562814#37562814)\n  const details: { [index: string]: string } = {\n    grant_type: 'client_credentials',\n    client_id: client_id,\n    client_secret: client_secret,\n    scope: 'openid api.ocm',\n  };\n\n  const formBody = [];\n  for (const property in details) {\n    if (Object.prototype.hasOwnProperty.call(details, property)) {\n      const encodedKey: string = encodeURIComponent(property);\n      const encodedValue: string = encodeURIComponent(details[property]);\n      formBody.push(`${encodedKey}=${encodedValue}`);\n    }\n  }\n  const formBodyString = formBody.join('&');\n\n  return await fetch(\n    `${url}/api/proxy/sso-redhat/auth/realms/redhat-external/protocol/openid-connect/token`,\n    {\n      method: 'POST',\n      body: formBodyString,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    },\n  )\n    .catch(error => error)\n    .then(resp => resp.json());\n}\n\nasync function lookupProduct(\n  url: string,\n  access_token: string,\n  product_name: string,\n): Promise<productList> {\n  return (await fetch(\n    `${url}/api/proxy/status-board/products?search=fullname+ilike+'${product_name}'`,\n    {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    },\n  )\n    .catch(error => error)\n    .then(resp => resp.json())) as productList;\n}\n\nexport const WebRCAFetchComponent = ({ product }: FetchProps) => {\n  const config = useApi(configApiRef);\n  const user = useApi(identityApiRef);\n  const entity = useEntity();\n\n  const { value, loading, error } = useAsync(async (): Promise<\n    IncidentList | string\n  > => {\n      // TODO: Should we limit to owner/mine?\n      //\n      const profile_info = await user.getProfileInfo().then((pi) => {\n        return pi;\n      })\n      console.log(profile_info);\n      const backstage_identity = await user.getBackstageIdentity().then((bi) => {\n        return bi;\n      })\n      console.log(backstage_identity);\n      const refresh_token = await user.getCredentials().then((creds) => {\n        console.log(creds);\n        console.log(creds.token);\n        return creds.token;\n      });\n      if (refresh_token === undefined) {\n        return 'Invalid token';\n      }\n      console.log(refresh_token);\n      let token = refresh_token;\n      let default_token;\n      try {\n        default_token = await refresh(\n          config.getString('backend.baseUrl'),\n          config.getString('ocm.clientId'),\n          config.getString('ocm.clientSecret'),\n        );\n      } catch (e) {\n        console.log(\"Error: \", e);\n        return 'Invalid token';\n      }\n      if (default_token.error) {\n        return default_token.error_description;\n      }\n\n      let products = '';\n      if (product) {\n        let p;\n        try {\n          p = await lookupProduct(\n            config.getString('backend.baseUrl'),\n            // token.access_token,\n            token,\n            product,\n          );\n        } catch {\n          console.log(\"Error using user token, falling back to default token\");\n          p = await lookupProduct(\n            config.getString('backend.baseUrl'),\n            default_token.access_token,\n            product,\n          );\n        }\n        if (p.items && p.items.length > 0) {\n          products = `?product_id=${p.items[0].id}`;\n        }\n      }\n      if (entity) {\n        let p;\n        try {\n          p = await lookupProduct(\n            config.getString('backend.baseUrl'),\n            // token.access_token,\n            token,\n            entity.entity.metadata.name,\n          );\n          if (p.items.length > 0) {\n            products = `?product_id=${p.items[0].id}`;\n          }\n        } catch {\n          console.log(\"Error using user token, falling back to default token\");\n          p = await lookupProduct(\n            config.getString('backend.baseUrl'),\n            default_token.access_token,\n            entity.entity.metadata.name,\n          );\n        }\n      }\n\n      if (products === '') {\n        return 'No product based on entity';\n      }\n\n      let incidentList;\n      try {\n      // TODO: Filter by status?  Add a toggle?\n      incidentList = fetch(\n        `${config.getString('backend.baseUrl')}/api/proxy/web-rca/incidents${products}`,\n        {\n          headers: {\n            // Authorization: `Bearer ${token.access_token}`,\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      )\n      .then(resp => resp.json())\n      .catch(e => e);\n      } catch {\n        console.log(\"Error using user token, falling back to default token\");\n        incidentList = fetch(\n          `${config.getString('backend.baseUrl')}/api/proxy/web-rca/incidents${products}`,\n          {\n            headers: {\n              // Authorization: `Bearer ${token.access_token}`,\n              Authorization: `Bearer ${default_token.access_token}`,\n            },\n          },\n        )\n          .then(resp => resp.json())\n          .catch(e => e);\n      }\n\n      return incidentList as Promise<IncidentList>;\n    }, []);\n\n  if (loading) {\n    return <Progress />;\n  }\n  if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n  if (!value) {\n    return (\n      <ResponseErrorPanel\n        error={{\n          name: 'Foo',\n          message: 'Foo',\n        }}\n      />\n    );\n  }\n\n  if (typeof value === 'string') {\n    return (\n      <DenseTable\n        message={value}\n        web_rca_url={config.getString('ocm.webRcaUIUrl')}\n      />\n    );\n  }\n\n  return (\n    <DenseTable\n      incidents={value}\n      web_rca_url={config.getString('ocm.webRcaUIUrl')}\n    />\n  );\n};\n","import { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'web-rca',\n});\n","import {\n  createPlugin,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\n\nimport { rootRouteRef } from './routes';\n\nexport const webRcaPlugin = createPlugin({\n  id: 'web-rca',\n  routes: {\n    root: rootRouteRef,\n  },\n});\n\nexport const WebRcaPage = webRcaPlugin.provide(\n  createRoutableExtension({\n    name: 'WebRcaPage',\n    component: () =>\n      import('./components/WebRCAComponent').then(m => m.WebRCAComponent),\n    // import('./components/WebRCAFetchComponent').then(m => m.WebRCAFetchComponent),\n    mountPoint: rootRouteRef,\n  }),\n);\n"],"names":["DenseTable","incidents","web_rca_url","message","InfoCard","title","Typography","variant","items","length","data","map","inc","incident_id","a","target","rel","href","summary","description","Table","options","search","paging","pageSize","columns","field","async","lookupProduct","url","access_token","product_name","fetch","headers","Authorization","catch","error","then","resp","json","WebRCAFetchComponent","product","config","useApi","configApiRef","user","identityApiRef","entity","useEntity","value","loading","useAsync","profile_info","getProfileInfo","pi","console","log","backstage_identity","getBackstageIdentity","bi","refresh_token","getCredentials","creds","token","undefined","default_token","client_id","client_secret","details","grant_type","scope","formBody","property","Object","prototype","hasOwnProperty","call","encodedKey","encodeURIComponent","encodedValue","push","formBodyString","join","method","body","refresh","getString","e","error_description","incidentList","products","p","id","metadata","name","Progress","ResponseErrorPanel","rootRouteRef","createRouteRef","webRcaPlugin","createPlugin","routes","root","WebRcaPage","provide","createRoutableExtension","component","m","WebRCAComponent","mountPoint"],"sourceRoot":""}