{"version":3,"file":"index.esm.js","sources":["../src/routes.ts","../src/plugin.ts","../src/components/WebRCAFetchComponent/WebRCAFetchComponent.tsx"],"sourcesContent":["import { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'web-rca',\n});\n","import {\n  createPlugin,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\n\nimport { rootRouteRef } from './routes';\n\nexport const webRcaPlugin = createPlugin({\n  id: 'web-rca',\n  routes: {\n    root: rootRouteRef,\n  },\n});\n\nexport const WebRcaPage = webRcaPlugin.provide(\n  createRoutableExtension({\n    name: 'WebRcaPage',\n    component: () =>\n      import('./components/WebRCAComponent').then(m => m.WebRCAComponent),\n    // import('./components/WebRCAFetchComponent').then(m => m.WebRCAFetchComponent),\n    mountPoint: rootRouteRef,\n  }),\n);\n","import React from 'react';\nimport {\n  Table,\n  TableColumn,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport useAsync from 'react-use/lib/useAsync';\nimport { useApi, configApiRef, identityApiRef } from '@backstage/core-plugin-api';\nimport '@backstage/plugin-user-settings';\nimport { Typography } from '@material-ui/core';\nimport { InfoCard } from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\n\ninterface DenseTableProps {\n  incidents?: IncidentList;\n  web_rca_url?: string;\n  message?: string;\n}\n\ninterface Incident {\n  id?: string;\n  kind?: string;\n  href?: string;\n  incident_id?: string;\n  summary?: string;\n  description?: string;\n}\n\ninterface IncidentList {\n  kind: 'IncidentList';\n  page?: number;\n  size?: number;\n  total?: number;\n  items?: Incident[];\n  errorMsg?: string;\n}\n\ninterface product {\n  id: string;\n  kind: string;\n  href: string;\n  name: string;\n  fullname: string;\n}\n\ninterface productList {\n  items: product[];\n}\n\ninterface FetchProps {\n  product?: string;\n}\n\nexport const DenseTable = ({\n  incidents,\n  web_rca_url,\n  message,\n}: DenseTableProps) => {\n  if (message) {\n    return (\n      <InfoCard title=\"Error fetching incidents\">\n        <Typography variant=\"body1\">{message}</Typography>\n      </InfoCard>\n    );\n  }\n\n  if (!incidents || !incidents.items || incidents.items.length === 0) {\n    return (\n      <InfoCard title=\"Error fetching incidents\">\n        <Typography variant=\"body1\">\"No Incidents\"</Typography>\n      </InfoCard>\n    );\n  }\n\n  const columns: TableColumn[] = [\n    { title: 'ID', field: 'incident_id' },\n    { title: 'Summary', field: 'summary' },\n    { title: 'Description', field: 'description' },\n  ];\n\n  const data = incidents.items.map(inc => {\n    return {\n      // incident_id: <a target=\"_blank\" rel=\"noreferrer\" href={`https://web-rca.stage.devshift.net/incident/${inc.incident_id}/events`}>{inc.incident_id}</a>,\n      incident_id: (\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={`${web_rca_url}/incident/${inc.incident_id}/events`}\n        >\n          {inc.incident_id}\n        </a>\n      ),\n      summary: inc.summary,\n      description: inc.description,\n    };\n  });\n\n  return (\n    <Table\n      title=\"Incidents\"\n      options={{ search: true, paging: true, pageSize: 10 }}\n      columns={columns}\n      data={data}\n    />\n  );\n};\n\nasync function refresh(url: string, refresh_token: string) {\n  // @REF [URL Encoded form body](https://stackoverflow.com/questions/35325370/how-do-i-post-a-x-www-form-urlencoded-request-using-fetch/37562814#37562814)\n  const details: { [index: string]: string } = {\n    grant_type: 'refresh_token',\n    client_id: 'cloud-services',\n    refresh_token: `${refresh_token}`,\n  };\n\n  const formBody = [];\n  for (const property in details) {\n    if (Object.prototype.hasOwnProperty.call(details, property)) {\n      const encodedKey: string = encodeURIComponent(property);\n      const encodedValue: string = encodeURIComponent(details[property]);\n      formBody.push(`${encodedKey}=${encodedValue}`);\n    }\n  }\n  const formBodyString = formBody.join('&');\n\n  return await fetch(\n    `${url}/api/proxy/sso-redhat/auth/realms/redhat-external/protocol/openid-connect/token`,\n    {\n      method: 'POST',\n      body: formBodyString,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    },\n  )\n    .catch(error => error)\n    .then(resp => resp.json());\n}\n\nasync function lookupProduct(\n  url: string,\n  access_token: string,\n  product_name: string,\n): Promise<productList> {\n  return (await fetch(\n    `${url}/api/proxy/status-board/products?search=fullname+ilike+'${product_name}'`,\n    {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    },\n  )\n    .catch(error => error)\n    .then(resp => resp.json())) as productList;\n}\n\nexport const WebRCAFetchComponent = ({ product }: FetchProps) => {\n  const config = useApi(configApiRef);\n  const user = useApi(identityApiRef);\n  const entity = useEntity();\n\n  const { value, loading, error } = useAsync(async (): Promise<\n    IncidentList | string\n  > => {\n      // const token = await refresh(\n      //   config.getString('backend.baseUrl'),\n      //   config.getString('ocm.token'),\n      // );\n      const refresh_token = await user.getCredentials().then((creds) => {\n        console.log(creds);\n        console.log(creds.token);\n        return creds.token;\n      });\n      if (refresh_token === undefined) {\n        return 'Invalid token';\n      }\n      console.log(refresh_token);\n      const token = await refresh(\n        config.getString('backend.baseUrl'),\n        refresh_token,\n      );\n\n      let products = '';\n      if (product) {\n        // console.log(`Filtering by product: ${product}`)\n        const p = await lookupProduct(\n          config.getString('backend.baseUrl'),\n          token.access_token,\n          product,\n        );\n        if (p.items && p.items.length > 0) {\n          products = `?product_id=${p.items[0].id}`;\n        }\n      }\n      if (entity) {\n        // console.log(`Filtering by entity: ${entity}`)\n        const p = await lookupProduct(\n          config.getString('backend.baseUrl'),\n          token.access_token,\n          entity.entity.metadata.name,\n        );\n        if (p.items.length > 0) {\n          products = `?product_id=${p.items[0].id}`;\n        }\n      }\n\n      if (products === '') {\n        return 'No product based on entity';\n      }\n\n      // TODO: Filter by status?  Add a toggle?\n      const incidentList = fetch(\n        `${config.getString(\n'backend.baseUrl',\n)}/api/proxy/web-rca/incidents${products}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token.access_token}`,\n          },\n        },\n      )\n      .then(resp => resp.json())\n      .catch(e => e);\n\n      return incidentList as Promise<IncidentList>;\n    }, []);\n\n  if (loading) {\n    return <Progress />;\n  }\n  if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n  if (!value) {\n    return (\n      <ResponseErrorPanel\n        error={{\n          name: 'Foo',\n          message: 'Foo',\n        }}\n      />\n    );\n  }\n\n  if (typeof value === 'string') {\n    return (\n      <DenseTable\n        message={value}\n        web_rca_url={config.getString('ocm.web-rca-url')}\n      />\n    );\n  }\n\n  return (\n    <DenseTable\n      incidents={value}\n      web_rca_url={config.getString('ocm.web-rca-url')}\n    />\n  );\n};\n"],"names":[],"mappings":"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"}