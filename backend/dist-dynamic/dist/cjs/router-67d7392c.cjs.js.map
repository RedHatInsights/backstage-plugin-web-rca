{"version":3,"file":"router-67d7392c.cjs.js","sources":["../../src/service/router.ts"],"sourcesContent":["import { errorHandler } from '@backstage/backend-common';\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport { Config } from '@backstage/config';\nimport express from 'express';\nimport Router from 'express-promise-router';\n// import { useApi, configApiRef } from '@backstage/core-plugin-api';\n// import { Logger } from 'winston';\n\nexport interface RouterOptions {\n  logger: LoggerService;\n  config: Config;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { logger, config } = options;\n\n  // const config = useApi(configApiRef);\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get('/health', (_, response) => {\n    logger.info('PONG!');\n    response.json({ status: 'ok' });\n  });\n\n  router.post('/incidents', (req, response) => {\n    logger.info('incidents!');\n    logger.info(config.get('ocm'));\n    logger.info(req.body);\n\n    /*\n    let default_token = refresh(\n      config.getString('backend.baseUrl'),\n      config.getString('ocm.clientId'),\n      config.getString('ocm.clientSecret'),\n    ).catch((e) => {\n      console.log(\"Error: \", e);\n      response.status(500);\n      response.json({error: e})\n      return\n    })\n    .then((token) => {\n      if (token.error) {\n        response.status(400);\n        response.json({error: token.error})\n      } else {\n        return token.access_token;\n      }\n    });\n    */\n\n    response.status(200);\n    response.json({ status: 'not-implemented' });\n    // response.json({ status: 'ok' });\n  });\n  router.use(errorHandler());\n  return router;\n}\n\n/*\ninterface product {\n  id: string;\n  kind: string;\n  href: string;\n  name: string;\n  fullname: string;\n}\n\ninterface productList {\n  items: product[];\n}\n\ninterface FetchProps {\n  product?: string;\n}\n\nasync function refresh(url: string, client_id: string, client_secret: string) {\n  // @REF [URL Encoded form body](https://stackoverflow.com/questions/35325370/how-do-i-post-a-x-www-form-urlencoded-request-using-fetch/37562814#37562814)\n  const details: { [index: string]: string } = {\n    grant_type: 'client_credentials',\n    client_id: client_id,\n    client_secret: client_secret,\n    scope: 'openid api.ocm',\n  };\n\n  const formBody = [];\n  for (const property in details) {\n    if (Object.prototype.hasOwnProperty.call(details, property)) {\n      const encodedKey: string = encodeURIComponent(property);\n      const encodedValue: string = encodeURIComponent(details[property]);\n      formBody.push(`${encodedKey}=${encodedValue}`);\n    }\n  }\n  const formBodyString = formBody.join('&');\n\n  return await fetch(\n    `${url}/api/proxy/sso-redhat/auth/realms/redhat-external/protocol/openid-connect/token`,\n    {\n      method: 'POST',\n      body: formBodyString,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    },\n  )\n    .catch(error => error)\n    .then(resp => resp.json());\n}\n\nasync function lookupProduct(\n  url: string,\n  access_token: string,\n  product_name: string,\n): Promise<productList> {\n  return (await fetch(\n    `${url}/api/proxy/status-board/products?search=fullname+ilike+'${product_name}'`,\n    {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    },\n  )\n    .catch(error => error)\n    .then(resp => resp.json())) as productList;\n}\n*/\n"],"names":["Router","express","errorHandler"],"mappings":";;;;;;;;;;;AAaA,eAAsB,aACpB,OACyB,EAAA;AACzB,EAAM,MAAA,EAAE,MAAQ,EAAA,MAAA,EAAW,GAAA,OAAA,CAAA;AAI3B,EAAA,MAAM,SAASA,0BAAO,EAAA,CAAA;AACtB,EAAO,MAAA,CAAA,GAAA,CAAIC,2BAAQ,CAAA,IAAA,EAAM,CAAA,CAAA;AAEzB,EAAA,MAAA,CAAO,GAAI,CAAA,SAAA,EAAW,CAAC,CAAA,EAAG,QAAa,KAAA;AACrC,IAAA,MAAA,CAAO,KAAK,OAAO,CAAA,CAAA;AACnB,IAAA,QAAA,CAAS,IAAK,CAAA,EAAE,MAAQ,EAAA,IAAA,EAAM,CAAA,CAAA;AAAA,GAC/B,CAAA,CAAA;AAED,EAAA,MAAA,CAAO,IAAK,CAAA,YAAA,EAAc,CAAC,GAAA,EAAK,QAAa,KAAA;AAC3C,IAAA,MAAA,CAAO,KAAK,YAAY,CAAA,CAAA;AACxB,IAAA,MAAA,CAAO,IAAK,CAAA,MAAA,CAAO,GAAI,CAAA,KAAK,CAAC,CAAA,CAAA;AAC7B,IAAO,MAAA,CAAA,IAAA,CAAK,IAAI,IAAI,CAAA,CAAA;AAuBpB,IAAA,QAAA,CAAS,OAAO,GAAG,CAAA,CAAA;AACnB,IAAA,QAAA,CAAS,IAAK,CAAA,EAAE,MAAQ,EAAA,iBAAA,EAAmB,CAAA,CAAA;AAAA,GAE5C,CAAA,CAAA;AACD,EAAO,MAAA,CAAA,GAAA,CAAIC,4BAAc,CAAA,CAAA;AACzB,EAAO,OAAA,MAAA,CAAA;AACT;;;;"}